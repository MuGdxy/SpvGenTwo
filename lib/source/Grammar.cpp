// Auto generated - do not modify
#include "spvgentwo/Grammar.h"
#include "spvgentwo/Glsl.h"
#include "spvgentwo/OpenCl.h"
using namespace spvgentwo;

Grammar::Grammar(IAllocator* _pAllocator) : m_instructions(_pAllocator, 796)
{
	m_instructions.emplaceUnique(0u, Instruction{"OpNop", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1u, Instruction{"OpUndef", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2u, Instruction{"OpSourceContinued", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(3u, Instruction{"OpSource", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4u, Instruction{"OpSourceExtension", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5u, Instruction{"OpName", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6u, Instruction{"OpMemberName", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(7u, Instruction{"OpString", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(8u, Instruction{"OpLine", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(10u, Instruction{"OpExtension", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(11u, Instruction{"OpExtInstImport", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(12u, Instruction{"OpExtInst", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(14u, Instruction{"OpMemoryModel", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(15u, Instruction{"OpEntryPoint", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(16u, Instruction{"OpExecutionMode", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(17u, Instruction{"OpCapability", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(19u, Instruction{"OpTypeVoid", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(20u, Instruction{"OpTypeBool", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(21u, Instruction{"OpTypeInt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(22u, Instruction{"OpTypeFloat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(23u, Instruction{"OpTypeVector", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(24u, Instruction{"OpTypeMatrix", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(25u, Instruction{"OpTypeImage", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(26u, Instruction{"OpTypeSampler", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(27u, Instruction{"OpTypeSampledImage", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(28u, Instruction{"OpTypeArray", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(29u, Instruction{"OpTypeRuntimeArray", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(30u, Instruction{"OpTypeStruct", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(31u, Instruction{"OpTypeOpaque", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(32u, Instruction{"OpTypePointer", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(33u, Instruction{"OpTypeFunction", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(34u, Instruction{"OpTypeEvent", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(35u, Instruction{"OpTypeDeviceEvent", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(36u, Instruction{"OpTypeReserveId", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(37u, Instruction{"OpTypeQueue", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(38u, Instruction{"OpTypePipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(39u, Instruction{"OpTypeForwardPointer", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(41u, Instruction{"OpConstantTrue", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(42u, Instruction{"OpConstantFalse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(43u, Instruction{"OpConstant", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(44u, Instruction{"OpConstantComposite", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(45u, Instruction{"OpConstantSampler", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(46u, Instruction{"OpConstantNull", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(48u, Instruction{"OpSpecConstantTrue", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(49u, Instruction{"OpSpecConstantFalse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(50u, Instruction{"OpSpecConstant", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(51u, Instruction{"OpSpecConstantComposite", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(52u, Instruction{"OpSpecConstantOp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(54u, Instruction{"OpFunction", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(55u, Instruction{"OpFunctionParameter", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(56u, Instruction{"OpFunctionEnd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(57u, Instruction{"OpFunctionCall", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(59u, Instruction{"OpVariable", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(60u, Instruction{"OpImageTexelPointer", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(61u, Instruction{"OpLoad", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(62u, Instruction{"OpStore", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(63u, Instruction{"OpCopyMemory", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(64u, Instruction{"OpCopyMemorySized", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(65u, Instruction{"OpAccessChain", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(66u, Instruction{"OpInBoundsAccessChain", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(67u, Instruction{"OpPtrAccessChain", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(68u, Instruction{"OpArrayLength", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(69u, Instruction{"OpGenericPtrMemSemantics", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(70u, Instruction{"OpInBoundsPtrAccessChain", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(71u, Instruction{"OpDecorate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(72u, Instruction{"OpMemberDecorate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(73u, Instruction{"OpDecorationGroup", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(74u, Instruction{"OpGroupDecorate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(75u, Instruction{"OpGroupMemberDecorate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(77u, Instruction{"OpVectorExtractDynamic", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(78u, Instruction{"OpVectorInsertDynamic", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(79u, Instruction{"OpVectorShuffle", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(80u, Instruction{"OpCompositeConstruct", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(81u, Instruction{"OpCompositeExtract", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(82u, Instruction{"OpCompositeInsert", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(83u, Instruction{"OpCopyObject", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(84u, Instruction{"OpTranspose", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(86u, Instruction{"OpSampledImage", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(87u, Instruction{"OpImageSampleImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(88u, Instruction{"OpImageSampleExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(89u, Instruction{"OpImageSampleDrefImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(90u, Instruction{"OpImageSampleDrefExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(91u, Instruction{"OpImageSampleProjImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(92u, Instruction{"OpImageSampleProjExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(93u, Instruction{"OpImageSampleProjDrefImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(94u, Instruction{"OpImageSampleProjDrefExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(95u, Instruction{"OpImageFetch", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(96u, Instruction{"OpImageGather", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(97u, Instruction{"OpImageDrefGather", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(98u, Instruction{"OpImageRead", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(99u, Instruction{"OpImageWrite", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(100u, Instruction{"OpImage", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(101u, Instruction{"OpImageQueryFormat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(102u, Instruction{"OpImageQueryOrder", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(103u, Instruction{"OpImageQuerySizeLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(104u, Instruction{"OpImageQuerySize", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(105u, Instruction{"OpImageQueryLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(106u, Instruction{"OpImageQueryLevels", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(107u, Instruction{"OpImageQuerySamples", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(109u, Instruction{"OpConvertFToU", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(110u, Instruction{"OpConvertFToS", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(111u, Instruction{"OpConvertSToF", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(112u, Instruction{"OpConvertUToF", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(113u, Instruction{"OpUConvert", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(114u, Instruction{"OpSConvert", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(115u, Instruction{"OpFConvert", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(116u, Instruction{"OpQuantizeToF16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(117u, Instruction{"OpConvertPtrToU", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(118u, Instruction{"OpSatConvertSToU", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(119u, Instruction{"OpSatConvertUToS", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(120u, Instruction{"OpConvertUToPtr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(121u, Instruction{"OpPtrCastToGeneric", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(122u, Instruction{"OpGenericCastToPtr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(123u, Instruction{"OpGenericCastToPtrExplicit", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(124u, Instruction{"OpBitcast", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(126u, Instruction{"OpSNegate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(127u, Instruction{"OpFNegate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(128u, Instruction{"OpIAdd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(129u, Instruction{"OpFAdd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(130u, Instruction{"OpISub", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(131u, Instruction{"OpFSub", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(132u, Instruction{"OpIMul", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(133u, Instruction{"OpFMul", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(134u, Instruction{"OpUDiv", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(135u, Instruction{"OpSDiv", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(136u, Instruction{"OpFDiv", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(137u, Instruction{"OpUMod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(138u, Instruction{"OpSRem", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(139u, Instruction{"OpSMod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(140u, Instruction{"OpFRem", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(141u, Instruction{"OpFMod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(142u, Instruction{"OpVectorTimesScalar", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(143u, Instruction{"OpMatrixTimesScalar", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(144u, Instruction{"OpVectorTimesMatrix", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(145u, Instruction{"OpMatrixTimesVector", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(146u, Instruction{"OpMatrixTimesMatrix", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(147u, Instruction{"OpOuterProduct", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(148u, Instruction{"OpDot", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(149u, Instruction{"OpIAddCarry", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(150u, Instruction{"OpISubBorrow", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(151u, Instruction{"OpUMulExtended", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(152u, Instruction{"OpSMulExtended", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(154u, Instruction{"OpAny", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(155u, Instruction{"OpAll", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(156u, Instruction{"OpIsNan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(157u, Instruction{"OpIsInf", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(158u, Instruction{"OpIsFinite", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(159u, Instruction{"OpIsNormal", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(160u, Instruction{"OpSignBitSet", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(161u, Instruction{"OpLessOrGreater", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(162u, Instruction{"OpOrdered", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(163u, Instruction{"OpUnordered", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(164u, Instruction{"OpLogicalEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(165u, Instruction{"OpLogicalNotEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(166u, Instruction{"OpLogicalOr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(167u, Instruction{"OpLogicalAnd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(168u, Instruction{"OpLogicalNot", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(169u, Instruction{"OpSelect", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(170u, Instruction{"OpIEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(171u, Instruction{"OpINotEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(172u, Instruction{"OpUGreaterThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(173u, Instruction{"OpSGreaterThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(174u, Instruction{"OpUGreaterThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(175u, Instruction{"OpSGreaterThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(176u, Instruction{"OpULessThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(177u, Instruction{"OpSLessThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(178u, Instruction{"OpULessThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(179u, Instruction{"OpSLessThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(180u, Instruction{"OpFOrdEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(181u, Instruction{"OpFUnordEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(182u, Instruction{"OpFOrdNotEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(183u, Instruction{"OpFUnordNotEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(184u, Instruction{"OpFOrdLessThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(185u, Instruction{"OpFUnordLessThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(186u, Instruction{"OpFOrdGreaterThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(187u, Instruction{"OpFUnordGreaterThan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(188u, Instruction{"OpFOrdLessThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(189u, Instruction{"OpFUnordLessThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(190u, Instruction{"OpFOrdGreaterThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(191u, Instruction{"OpFUnordGreaterThanEqual", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(194u, Instruction{"OpShiftRightLogical", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(195u, Instruction{"OpShiftRightArithmetic", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(196u, Instruction{"OpShiftLeftLogical", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(197u, Instruction{"OpBitwiseOr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(198u, Instruction{"OpBitwiseXor", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(199u, Instruction{"OpBitwiseAnd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(200u, Instruction{"OpNot", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(201u, Instruction{"OpBitFieldInsert", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(202u, Instruction{"OpBitFieldSExtract", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(203u, Instruction{"OpBitFieldUExtract", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(204u, Instruction{"OpBitReverse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(205u, Instruction{"OpBitCount", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(207u, Instruction{"OpDPdx", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(208u, Instruction{"OpDPdy", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(209u, Instruction{"OpFwidth", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(210u, Instruction{"OpDPdxFine", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(211u, Instruction{"OpDPdyFine", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(212u, Instruction{"OpFwidthFine", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(213u, Instruction{"OpDPdxCoarse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(214u, Instruction{"OpDPdyCoarse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(215u, Instruction{"OpFwidthCoarse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(218u, Instruction{"OpEmitVertex", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(219u, Instruction{"OpEndPrimitive", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(220u, Instruction{"OpEmitStreamVertex", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(221u, Instruction{"OpEndStreamPrimitive", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(224u, Instruction{"OpControlBarrier", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(225u, Instruction{"OpMemoryBarrier", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(227u, Instruction{"OpAtomicLoad", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(228u, Instruction{"OpAtomicStore", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(229u, Instruction{"OpAtomicExchange", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(230u, Instruction{"OpAtomicCompareExchange", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(231u, Instruction{"OpAtomicCompareExchangeWeak", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(232u, Instruction{"OpAtomicIIncrement", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(233u, Instruction{"OpAtomicIDecrement", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(234u, Instruction{"OpAtomicIAdd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(235u, Instruction{"OpAtomicISub", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(236u, Instruction{"OpAtomicSMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(237u, Instruction{"OpAtomicUMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(238u, Instruction{"OpAtomicSMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(239u, Instruction{"OpAtomicUMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(240u, Instruction{"OpAtomicAnd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(241u, Instruction{"OpAtomicOr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(242u, Instruction{"OpAtomicXor", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(245u, Instruction{"OpPhi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(246u, Instruction{"OpLoopMerge", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(247u, Instruction{"OpSelectionMerge", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(248u, Instruction{"OpLabel", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(249u, Instruction{"OpBranch", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(250u, Instruction{"OpBranchConditional", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(251u, Instruction{"OpSwitch", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(252u, Instruction{"OpKill", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(253u, Instruction{"OpReturn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(254u, Instruction{"OpReturnValue", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(255u, Instruction{"OpUnreachable", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(256u, Instruction{"OpLifetimeStart", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(257u, Instruction{"OpLifetimeStop", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(259u, Instruction{"OpGroupAsyncCopy", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(260u, Instruction{"OpGroupWaitEvents", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(261u, Instruction{"OpGroupAll", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(262u, Instruction{"OpGroupAny", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(263u, Instruction{"OpGroupBroadcast", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(264u, Instruction{"OpGroupIAdd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(265u, Instruction{"OpGroupFAdd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(266u, Instruction{"OpGroupFMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(267u, Instruction{"OpGroupUMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(268u, Instruction{"OpGroupSMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(269u, Instruction{"OpGroupFMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(270u, Instruction{"OpGroupUMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(271u, Instruction{"OpGroupSMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(274u, Instruction{"OpReadPipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(275u, Instruction{"OpWritePipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(276u, Instruction{"OpReservedReadPipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(277u, Instruction{"OpReservedWritePipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(278u, Instruction{"OpReserveReadPipePackets", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(279u, Instruction{"OpReserveWritePipePackets", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(280u, Instruction{"OpCommitReadPipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(281u, Instruction{"OpCommitWritePipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(282u, Instruction{"OpIsValidReserveId", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(283u, Instruction{"OpGetNumPipePackets", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(284u, Instruction{"OpGetMaxPipePackets", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(285u, Instruction{"OpGroupReserveReadPipePackets", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(286u, Instruction{"OpGroupReserveWritePipePackets", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(287u, Instruction{"OpGroupCommitReadPipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(288u, Instruction{"OpGroupCommitWritePipe", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(291u, Instruction{"OpEnqueueMarker", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(292u, Instruction{"OpEnqueueKernel", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(293u, Instruction{"OpGetKernelNDrangeSubGroupCount", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(294u, Instruction{"OpGetKernelNDrangeMaxSubGroupSize", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(295u, Instruction{"OpGetKernelWorkGroupSize", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(296u, Instruction{"OpGetKernelPreferredWorkGroupSizeMultiple", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(297u, Instruction{"OpRetainEvent", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(298u, Instruction{"OpReleaseEvent", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(299u, Instruction{"OpCreateUserEvent", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(300u, Instruction{"OpIsValidEvent", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(301u, Instruction{"OpSetUserEventStatus", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(302u, Instruction{"OpCaptureEventProfilingInfo", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(303u, Instruction{"OpGetDefaultQueue", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(304u, Instruction{"OpBuildNDRange", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(305u, Instruction{"OpImageSparseSampleImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(306u, Instruction{"OpImageSparseSampleExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(307u, Instruction{"OpImageSparseSampleDrefImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(308u, Instruction{"OpImageSparseSampleDrefExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(309u, Instruction{"OpImageSparseSampleProjImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(310u, Instruction{"OpImageSparseSampleProjExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(311u, Instruction{"OpImageSparseSampleProjDrefImplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(312u, Instruction{"OpImageSparseSampleProjDrefExplicitLod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(313u, Instruction{"OpImageSparseFetch", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(314u, Instruction{"OpImageSparseGather", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(315u, Instruction{"OpImageSparseDrefGather", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(316u, Instruction{"OpImageSparseTexelsResident", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(317u, Instruction{"OpNoLine", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(318u, Instruction{"OpAtomicFlagTestAndSet", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(319u, Instruction{"OpAtomicFlagClear", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(320u, Instruction{"OpImageSparseRead", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(321u, Instruction{"OpSizeOf", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(322u, Instruction{"OpTypePipeStorage", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(323u, Instruction{"OpConstantPipeStorage", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(324u, Instruction{"OpCreatePipeFromPipeStorage", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(325u, Instruction{"OpGetKernelLocalSizeForSubgroupCount", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(326u, Instruction{"OpGetKernelMaxNumSubgroups", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(327u, Instruction{"OpTypeNamedBarrier", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(328u, Instruction{"OpNamedBarrierInitialize", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(329u, Instruction{"OpMemoryNamedBarrier", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(330u, Instruction{"OpModuleProcessed", _pAllocator, _pAllocator, _pAllocator, 65792});
	m_instructions.emplaceUnique(331u, Instruction{"OpExecutionModeId", _pAllocator, _pAllocator, _pAllocator, 66048});
	m_instructions.emplaceUnique(332u, Instruction{"OpDecorateId", _pAllocator, _pAllocator, _pAllocator, 66048});
	m_instructions.emplaceUnique(333u, Instruction{"OpGroupNonUniformElect", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(334u, Instruction{"OpGroupNonUniformAll", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(335u, Instruction{"OpGroupNonUniformAny", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(336u, Instruction{"OpGroupNonUniformAllEqual", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(337u, Instruction{"OpGroupNonUniformBroadcast", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(338u, Instruction{"OpGroupNonUniformBroadcastFirst", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(339u, Instruction{"OpGroupNonUniformBallot", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(340u, Instruction{"OpGroupNonUniformInverseBallot", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(341u, Instruction{"OpGroupNonUniformBallotBitExtract", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(342u, Instruction{"OpGroupNonUniformBallotBitCount", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(343u, Instruction{"OpGroupNonUniformBallotFindLSB", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(344u, Instruction{"OpGroupNonUniformBallotFindMSB", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(345u, Instruction{"OpGroupNonUniformShuffle", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(346u, Instruction{"OpGroupNonUniformShuffleXor", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(347u, Instruction{"OpGroupNonUniformShuffleUp", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(348u, Instruction{"OpGroupNonUniformShuffleDown", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(349u, Instruction{"OpGroupNonUniformIAdd", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(350u, Instruction{"OpGroupNonUniformFAdd", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(351u, Instruction{"OpGroupNonUniformIMul", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(352u, Instruction{"OpGroupNonUniformFMul", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(353u, Instruction{"OpGroupNonUniformSMin", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(354u, Instruction{"OpGroupNonUniformUMin", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(355u, Instruction{"OpGroupNonUniformFMin", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(356u, Instruction{"OpGroupNonUniformSMax", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(357u, Instruction{"OpGroupNonUniformUMax", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(358u, Instruction{"OpGroupNonUniformFMax", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(359u, Instruction{"OpGroupNonUniformBitwiseAnd", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(360u, Instruction{"OpGroupNonUniformBitwiseOr", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(361u, Instruction{"OpGroupNonUniformBitwiseXor", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(362u, Instruction{"OpGroupNonUniformLogicalAnd", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(363u, Instruction{"OpGroupNonUniformLogicalOr", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(364u, Instruction{"OpGroupNonUniformLogicalXor", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(365u, Instruction{"OpGroupNonUniformQuadBroadcast", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(366u, Instruction{"OpGroupNonUniformQuadSwap", _pAllocator, _pAllocator, _pAllocator, 66304});
	m_instructions.emplaceUnique(400u, Instruction{"OpCopyLogical", _pAllocator, _pAllocator, _pAllocator, 66560});
	m_instructions.emplaceUnique(401u, Instruction{"OpPtrEqual", _pAllocator, _pAllocator, _pAllocator, 66560});
	m_instructions.emplaceUnique(402u, Instruction{"OpPtrNotEqual", _pAllocator, _pAllocator, _pAllocator, 66560});
	m_instructions.emplaceUnique(403u, Instruction{"OpPtrDiff", _pAllocator, _pAllocator, _pAllocator, 66560});
	m_instructions.emplaceUnique(4421u, Instruction{"OpSubgroupBallotKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4422u, Instruction{"OpSubgroupFirstInvocationKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4428u, Instruction{"OpSubgroupAllKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4429u, Instruction{"OpSubgroupAnyKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4430u, Instruction{"OpSubgroupAllEqualKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4432u, Instruction{"OpSubgroupReadInvocationKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4472u, Instruction{"OpTypeRayQueryProvisionalKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4473u, Instruction{"OpRayQueryInitializeKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4474u, Instruction{"OpRayQueryTerminateKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4475u, Instruction{"OpRayQueryGenerateIntersectionKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4476u, Instruction{"OpRayQueryConfirmIntersectionKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4477u, Instruction{"OpRayQueryProceedKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(4479u, Instruction{"OpRayQueryGetIntersectionTypeKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5000u, Instruction{"OpGroupIAddNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5001u, Instruction{"OpGroupFAddNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5002u, Instruction{"OpGroupFMinNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5003u, Instruction{"OpGroupUMinNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5004u, Instruction{"OpGroupSMinNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5005u, Instruction{"OpGroupFMaxNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5006u, Instruction{"OpGroupUMaxNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5007u, Instruction{"OpGroupSMaxNonUniformAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5011u, Instruction{"OpFragmentMaskFetchAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5012u, Instruction{"OpFragmentFetchAMD", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5056u, Instruction{"OpReadClockKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5283u, Instruction{"OpImageSampleFootprintNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5296u, Instruction{"OpGroupNonUniformPartitionNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5299u, Instruction{"OpWritePackedPrimitiveIndices4x8NV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5334u, Instruction{"OpReportIntersectionKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5335u, Instruction{"OpIgnoreIntersectionKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5336u, Instruction{"OpTerminateRayKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5337u, Instruction{"OpTraceRayKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5341u, Instruction{"OpTypeAccelerationStructureKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5344u, Instruction{"OpExecuteCallableKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5358u, Instruction{"OpTypeCooperativeMatrixNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5359u, Instruction{"OpCooperativeMatrixLoadNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5360u, Instruction{"OpCooperativeMatrixStoreNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5361u, Instruction{"OpCooperativeMatrixMulAddNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5362u, Instruction{"OpCooperativeMatrixLengthNV", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5364u, Instruction{"OpBeginInvocationInterlockEXT", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5365u, Instruction{"OpEndInvocationInterlockEXT", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5380u, Instruction{"OpDemoteToHelperInvocationEXT", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5381u, Instruction{"OpIsHelperInvocationEXT", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5571u, Instruction{"OpSubgroupShuffleINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5572u, Instruction{"OpSubgroupShuffleDownINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5573u, Instruction{"OpSubgroupShuffleUpINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5574u, Instruction{"OpSubgroupShuffleXorINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5575u, Instruction{"OpSubgroupBlockReadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5576u, Instruction{"OpSubgroupBlockWriteINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5577u, Instruction{"OpSubgroupImageBlockReadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5578u, Instruction{"OpSubgroupImageBlockWriteINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5580u, Instruction{"OpSubgroupImageMediaBlockReadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5581u, Instruction{"OpSubgroupImageMediaBlockWriteINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5585u, Instruction{"OpUCountLeadingZerosINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5586u, Instruction{"OpUCountTrailingZerosINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5587u, Instruction{"OpAbsISubINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5588u, Instruction{"OpAbsUSubINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5589u, Instruction{"OpIAddSatINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5590u, Instruction{"OpUAddSatINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5591u, Instruction{"OpIAverageINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5592u, Instruction{"OpUAverageINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5593u, Instruction{"OpIAverageRoundedINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5594u, Instruction{"OpUAverageRoundedINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5595u, Instruction{"OpISubSatINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5596u, Instruction{"OpUSubSatINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5597u, Instruction{"OpIMul32x16INTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5598u, Instruction{"OpUMul32x16INTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5600u, Instruction{"OpFunctionPointerINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5601u, Instruction{"OpFunctionPointerCallINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5632u, Instruction{"OpDecorateString", _pAllocator, _pAllocator, _pAllocator, 66560});
	m_instructions.emplaceUnique(5633u, Instruction{"OpMemberDecorateString", _pAllocator, _pAllocator, _pAllocator, 66560});
	m_instructions.emplaceUnique(5699u, Instruction{"OpVmeImageINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5700u, Instruction{"OpTypeVmeImageINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5701u, Instruction{"OpTypeAvcImePayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5702u, Instruction{"OpTypeAvcRefPayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5703u, Instruction{"OpTypeAvcSicPayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5704u, Instruction{"OpTypeAvcMcePayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5705u, Instruction{"OpTypeAvcMceResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5706u, Instruction{"OpTypeAvcImeResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5707u, Instruction{"OpTypeAvcImeResultSingleReferenceStreamoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5708u, Instruction{"OpTypeAvcImeResultDualReferenceStreamoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5709u, Instruction{"OpTypeAvcImeSingleReferenceStreaminINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5710u, Instruction{"OpTypeAvcImeDualReferenceStreaminINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5711u, Instruction{"OpTypeAvcRefResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5712u, Instruction{"OpTypeAvcSicResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5713u, Instruction{"OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5714u, Instruction{"OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5715u, Instruction{"OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5716u, Instruction{"OpSubgroupAvcMceSetInterShapePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5717u, Instruction{"OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5718u, Instruction{"OpSubgroupAvcMceSetInterDirectionPenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5719u, Instruction{"OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5720u, Instruction{"OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5721u, Instruction{"OpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5722u, Instruction{"OpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5723u, Instruction{"OpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5724u, Instruction{"OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5725u, Instruction{"OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5726u, Instruction{"OpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5727u, Instruction{"OpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5728u, Instruction{"OpSubgroupAvcMceSetAcOnlyHaarINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5729u, Instruction{"OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5730u, Instruction{"OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5731u, Instruction{"OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5732u, Instruction{"OpSubgroupAvcMceConvertToImePayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5733u, Instruction{"OpSubgroupAvcMceConvertToImeResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5734u, Instruction{"OpSubgroupAvcMceConvertToRefPayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5735u, Instruction{"OpSubgroupAvcMceConvertToRefResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5736u, Instruction{"OpSubgroupAvcMceConvertToSicPayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5737u, Instruction{"OpSubgroupAvcMceConvertToSicResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5738u, Instruction{"OpSubgroupAvcMceGetMotionVectorsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5739u, Instruction{"OpSubgroupAvcMceGetInterDistortionsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5740u, Instruction{"OpSubgroupAvcMceGetBestInterDistortionsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5741u, Instruction{"OpSubgroupAvcMceGetInterMajorShapeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5742u, Instruction{"OpSubgroupAvcMceGetInterMinorShapeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5743u, Instruction{"OpSubgroupAvcMceGetInterDirectionsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5744u, Instruction{"OpSubgroupAvcMceGetInterMotionVectorCountINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5745u, Instruction{"OpSubgroupAvcMceGetInterReferenceIdsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5746u, Instruction{"OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5747u, Instruction{"OpSubgroupAvcImeInitializeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5748u, Instruction{"OpSubgroupAvcImeSetSingleReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5749u, Instruction{"OpSubgroupAvcImeSetDualReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5750u, Instruction{"OpSubgroupAvcImeRefWindowSizeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5751u, Instruction{"OpSubgroupAvcImeAdjustRefOffsetINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5752u, Instruction{"OpSubgroupAvcImeConvertToMcePayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5753u, Instruction{"OpSubgroupAvcImeSetMaxMotionVectorCountINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5754u, Instruction{"OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5755u, Instruction{"OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5756u, Instruction{"OpSubgroupAvcImeSetWeightedSadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5757u, Instruction{"OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5758u, Instruction{"OpSubgroupAvcImeEvaluateWithDualReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5759u, Instruction{"OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5760u, Instruction{"OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5761u, Instruction{"OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5762u, Instruction{"OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5763u, Instruction{"OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5764u, Instruction{"OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5765u, Instruction{"OpSubgroupAvcImeConvertToMceResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5766u, Instruction{"OpSubgroupAvcImeGetSingleReferenceStreaminINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5767u, Instruction{"OpSubgroupAvcImeGetDualReferenceStreaminINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5768u, Instruction{"OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5769u, Instruction{"OpSubgroupAvcImeStripDualReferenceStreamoutINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5770u, Instruction{"OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5771u, Instruction{"OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5772u, Instruction{"OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5773u, Instruction{"OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5774u, Instruction{"OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5775u, Instruction{"OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5776u, Instruction{"OpSubgroupAvcImeGetBorderReachedINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5777u, Instruction{"OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5778u, Instruction{"OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5779u, Instruction{"OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5780u, Instruction{"OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5781u, Instruction{"OpSubgroupAvcFmeInitializeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5782u, Instruction{"OpSubgroupAvcBmeInitializeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5783u, Instruction{"OpSubgroupAvcRefConvertToMcePayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5784u, Instruction{"OpSubgroupAvcRefSetBidirectionalMixDisableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5785u, Instruction{"OpSubgroupAvcRefSetBilinearFilterEnableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5786u, Instruction{"OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5787u, Instruction{"OpSubgroupAvcRefEvaluateWithDualReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5788u, Instruction{"OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5789u, Instruction{"OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5790u, Instruction{"OpSubgroupAvcRefConvertToMceResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5791u, Instruction{"OpSubgroupAvcSicInitializeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5792u, Instruction{"OpSubgroupAvcSicConfigureSkcINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5793u, Instruction{"OpSubgroupAvcSicConfigureIpeLumaINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5794u, Instruction{"OpSubgroupAvcSicConfigureIpeLumaChromaINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5795u, Instruction{"OpSubgroupAvcSicGetMotionVectorMaskINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5796u, Instruction{"OpSubgroupAvcSicConvertToMcePayloadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5797u, Instruction{"OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5798u, Instruction{"OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5799u, Instruction{"OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5800u, Instruction{"OpSubgroupAvcSicSetBilinearFilterEnableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5801u, Instruction{"OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5802u, Instruction{"OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5803u, Instruction{"OpSubgroupAvcSicEvaluateIpeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5804u, Instruction{"OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5805u, Instruction{"OpSubgroupAvcSicEvaluateWithDualReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5806u, Instruction{"OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5807u, Instruction{"OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5808u, Instruction{"OpSubgroupAvcSicConvertToMceResultINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5809u, Instruction{"OpSubgroupAvcSicGetIpeLumaShapeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5810u, Instruction{"OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5811u, Instruction{"OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5812u, Instruction{"OpSubgroupAvcSicGetPackedIpeLumaModesINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5813u, Instruction{"OpSubgroupAvcSicGetIpeChromaModeINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5814u, Instruction{"OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5815u, Instruction{"OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5816u, Instruction{"OpSubgroupAvcSicGetInterRawSadsINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5887u, Instruction{"OpLoopControlINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5946u, Instruction{"OpReadPipeBlockingINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5947u, Instruction{"OpWritePipeBlockingINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(5949u, Instruction{"OpFPGARegINTEL", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6016u, Instruction{"OpRayQueryGetRayTMinKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6017u, Instruction{"OpRayQueryGetRayFlagsKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6018u, Instruction{"OpRayQueryGetIntersectionTKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6019u, Instruction{"OpRayQueryGetIntersectionInstanceCustomIndexKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6020u, Instruction{"OpRayQueryGetIntersectionInstanceIdKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6021u, Instruction{"OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6022u, Instruction{"OpRayQueryGetIntersectionGeometryIndexKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6023u, Instruction{"OpRayQueryGetIntersectionPrimitiveIndexKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6024u, Instruction{"OpRayQueryGetIntersectionBarycentricsKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6025u, Instruction{"OpRayQueryGetIntersectionFrontFaceKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6026u, Instruction{"OpRayQueryGetIntersectionCandidateAABBOpaqueKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6027u, Instruction{"OpRayQueryGetIntersectionObjectRayDirectionKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6028u, Instruction{"OpRayQueryGetIntersectionObjectRayOriginKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6029u, Instruction{"OpRayQueryGetWorldRayDirectionKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6030u, Instruction{"OpRayQueryGetWorldRayOriginKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6031u, Instruction{"OpRayQueryGetIntersectionObjectToWorldKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(6032u, Instruction{"OpRayQueryGetIntersectionWorldToObjectKHR", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 1u, Instruction{"Round", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 2u, Instruction{"RoundEven", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 3u, Instruction{"Trunc", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 4u, Instruction{"FAbs", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 5u, Instruction{"SAbs", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 6u, Instruction{"FSign", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 7u, Instruction{"SSign", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 8u, Instruction{"Floor", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 9u, Instruction{"Ceil", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 10u, Instruction{"Fract", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 11u, Instruction{"Radians", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 12u, Instruction{"Degrees", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 13u, Instruction{"Sin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 14u, Instruction{"Cos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 15u, Instruction{"Tan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 16u, Instruction{"Asin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 17u, Instruction{"Acos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 18u, Instruction{"Atan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 19u, Instruction{"Sinh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 20u, Instruction{"Cosh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 21u, Instruction{"Tanh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 22u, Instruction{"Asinh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 23u, Instruction{"Acosh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 24u, Instruction{"Atanh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 25u, Instruction{"Atan2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 26u, Instruction{"Pow", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 27u, Instruction{"Exp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 28u, Instruction{"Log", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 29u, Instruction{"Exp2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 30u, Instruction{"Log2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 31u, Instruction{"Sqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 32u, Instruction{"InverseSqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 33u, Instruction{"Determinant", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 34u, Instruction{"MatrixInverse", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 35u, Instruction{"Modf", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 36u, Instruction{"ModfStruct", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 37u, Instruction{"FMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 38u, Instruction{"UMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 39u, Instruction{"SMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 40u, Instruction{"FMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 41u, Instruction{"UMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 42u, Instruction{"SMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 43u, Instruction{"FClamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 44u, Instruction{"UClamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 45u, Instruction{"SClamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 46u, Instruction{"FMix", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 47u, Instruction{"IMix", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 48u, Instruction{"Step", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 49u, Instruction{"SmoothStep", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 50u, Instruction{"Fma", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 51u, Instruction{"Frexp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 52u, Instruction{"FrexpStruct", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 53u, Instruction{"Ldexp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 54u, Instruction{"PackSnorm4x8", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 55u, Instruction{"PackUnorm4x8", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 56u, Instruction{"PackSnorm2x16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 57u, Instruction{"PackUnorm2x16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 58u, Instruction{"PackHalf2x16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 59u, Instruction{"PackDouble2x32", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 60u, Instruction{"UnpackSnorm2x16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 61u, Instruction{"UnpackUnorm2x16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 62u, Instruction{"UnpackHalf2x16", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 63u, Instruction{"UnpackSnorm4x8", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 64u, Instruction{"UnpackUnorm4x8", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 65u, Instruction{"UnpackDouble2x32", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 66u, Instruction{"Length", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 67u, Instruction{"Distance", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 68u, Instruction{"Cross", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 69u, Instruction{"Normalize", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 70u, Instruction{"FaceForward", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 71u, Instruction{"Reflect", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 72u, Instruction{"Refract", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 73u, Instruction{"FindILsb", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 74u, Instruction{"FindSMsb", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 75u, Instruction{"FindUMsb", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 76u, Instruction{"InterpolateAtCentroid", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 77u, Instruction{"InterpolateAtSample", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 78u, Instruction{"InterpolateAtOffset", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 79u, Instruction{"NMin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 80u, Instruction{"NMax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(1ull << 32u | 81u, Instruction{"NClamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 0u, Instruction{"acos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 1u, Instruction{"acosh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 2u, Instruction{"acospi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 3u, Instruction{"asin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 4u, Instruction{"asinh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 5u, Instruction{"asinpi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 6u, Instruction{"atan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 7u, Instruction{"atan2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 8u, Instruction{"atanh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 9u, Instruction{"atanpi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 10u, Instruction{"atan2pi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 11u, Instruction{"cbrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 12u, Instruction{"ceil", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 13u, Instruction{"copysign", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 14u, Instruction{"cos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 15u, Instruction{"cosh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 16u, Instruction{"cospi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 17u, Instruction{"erfc", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 18u, Instruction{"erf", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 19u, Instruction{"exp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 20u, Instruction{"exp2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 21u, Instruction{"exp10", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 22u, Instruction{"expm1", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 23u, Instruction{"fabs", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 24u, Instruction{"fdim", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 25u, Instruction{"floor", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 26u, Instruction{"fma", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 27u, Instruction{"fmax", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 28u, Instruction{"fmin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 29u, Instruction{"fmod", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 30u, Instruction{"fract", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 31u, Instruction{"frexp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 32u, Instruction{"hypot", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 33u, Instruction{"ilogb", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 34u, Instruction{"ldexp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 35u, Instruction{"lgamma", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 36u, Instruction{"lgamma_r", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 37u, Instruction{"log", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 38u, Instruction{"log2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 39u, Instruction{"log10", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 40u, Instruction{"log1p", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 41u, Instruction{"logb", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 42u, Instruction{"mad", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 43u, Instruction{"maxmag", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 44u, Instruction{"minmag", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 45u, Instruction{"modf", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 46u, Instruction{"nan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 47u, Instruction{"nextafter", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 48u, Instruction{"pow", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 49u, Instruction{"pown", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 50u, Instruction{"powr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 51u, Instruction{"remainder", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 52u, Instruction{"remquo", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 53u, Instruction{"rint", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 54u, Instruction{"rootn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 55u, Instruction{"round", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 56u, Instruction{"rsqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 57u, Instruction{"sin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 58u, Instruction{"sincos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 59u, Instruction{"sinh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 60u, Instruction{"sinpi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 61u, Instruction{"sqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 62u, Instruction{"tan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 63u, Instruction{"tanh", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 64u, Instruction{"tanpi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 65u, Instruction{"tgamma", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 66u, Instruction{"trunc", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 67u, Instruction{"half_cos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 68u, Instruction{"half_divide", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 69u, Instruction{"half_exp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 70u, Instruction{"half_exp2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 71u, Instruction{"half_exp10", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 72u, Instruction{"half_log", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 73u, Instruction{"half_log2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 74u, Instruction{"half_log10", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 75u, Instruction{"half_powr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 76u, Instruction{"half_recip", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 77u, Instruction{"half_rsqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 78u, Instruction{"half_sin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 79u, Instruction{"half_sqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 80u, Instruction{"half_tan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 81u, Instruction{"native_cos", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 82u, Instruction{"native_divide", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 83u, Instruction{"native_exp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 84u, Instruction{"native_exp2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 85u, Instruction{"native_exp10", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 86u, Instruction{"native_log", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 87u, Instruction{"native_log2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 88u, Instruction{"native_log10", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 89u, Instruction{"native_powr", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 90u, Instruction{"native_recip", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 91u, Instruction{"native_rsqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 92u, Instruction{"native_sin", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 93u, Instruction{"native_sqrt", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 94u, Instruction{"native_tan", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 141u, Instruction{"s_abs", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 142u, Instruction{"s_abs_diff", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 143u, Instruction{"s_add_sat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 144u, Instruction{"u_add_sat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 145u, Instruction{"s_hadd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 146u, Instruction{"u_hadd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 147u, Instruction{"s_rhadd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 148u, Instruction{"u_rhadd", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 149u, Instruction{"s_clamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 150u, Instruction{"u_clamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 151u, Instruction{"clz", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 152u, Instruction{"ctz", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 153u, Instruction{"s_mad_hi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 154u, Instruction{"u_mad_sat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 155u, Instruction{"s_mad_sat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 156u, Instruction{"s_max", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 157u, Instruction{"u_max", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 158u, Instruction{"s_min", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 159u, Instruction{"u_min", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 160u, Instruction{"s_mul_hi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 161u, Instruction{"rotate", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 162u, Instruction{"s_sub_sat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 163u, Instruction{"u_sub_sat", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 164u, Instruction{"u_upsample", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 165u, Instruction{"s_upsample", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 166u, Instruction{"popcount", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 167u, Instruction{"s_mad24", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 168u, Instruction{"u_mad24", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 169u, Instruction{"s_mul24", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 170u, Instruction{"u_mul24", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 201u, Instruction{"u_abs", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 202u, Instruction{"u_abs_diff", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 203u, Instruction{"u_mul_hi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 204u, Instruction{"u_mad_hi", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 95u, Instruction{"fclamp", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 96u, Instruction{"degrees", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 97u, Instruction{"fmax_common", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 98u, Instruction{"fmin_common", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 99u, Instruction{"mix", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 100u, Instruction{"radians", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 101u, Instruction{"step", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 102u, Instruction{"smoothstep", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 103u, Instruction{"sign", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 104u, Instruction{"cross", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 105u, Instruction{"distance", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 106u, Instruction{"length", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 107u, Instruction{"normalize", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 108u, Instruction{"fast_distance", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 109u, Instruction{"fast_length", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 110u, Instruction{"fast_normalize", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 186u, Instruction{"bitselect", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 187u, Instruction{"select", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 171u, Instruction{"vloadn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 172u, Instruction{"vstoren", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 173u, Instruction{"vload_half", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 174u, Instruction{"vload_halfn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 175u, Instruction{"vstore_half", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 176u, Instruction{"vstore_half_r", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 177u, Instruction{"vstore_halfn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 178u, Instruction{"vstore_halfn_r", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 179u, Instruction{"vloada_halfn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 180u, Instruction{"vstorea_halfn", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 181u, Instruction{"vstorea_halfn_r", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 182u, Instruction{"shuffle", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 183u, Instruction{"shuffle2", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 184u, Instruction{"printf", _pAllocator, _pAllocator, _pAllocator, 0});
	m_instructions.emplaceUnique(2ull << 32u | 185u, Instruction{"prefetch", _pAllocator, _pAllocator, _pAllocator, 0});
};
const Grammar::Instruction* Grammar::getInfo(unsigned int _opcode, Extension _extension) const
{
	Hash64 hash = static_cast<Hash64>(_extension) << 32u | _opcode;
	return m_instructions.get(hash);
};
